// Project Synergy - Crosswalk Lights
int trafRed = 12; // assign traffic lights
int trafYellow = 11;
int trafGreen = 10;
int pedRed = 9; // assign pedestrian lights
int pedGreen = 8;
int pirSensor = 2; // sensor pin
int pirState = 0; // pirSensor status
int crossTime = 15000; // time for pedestrians to cross
unsigned long changeTime = 0; // time last pedestrian cycle completed

void setup() {
pinMode(trafRed, OUTPUT);
pinMode(trafYellow, OUTPUT);
pinMode(trafGreen, OUTPUT);
pinMode(pedRed, OUTPUT);
pinMode(pedGreen, OUTPUT);
pinMode(pirSensor, INPUT); // sensor on pin 2
}
void loop() {
pirState = digitalRead(pirSensor);
/* check if sensor is triggered and it is over 20 seconds since last trigger */
if (pirState == 1 && (millis() - changeTime)> 20000)
{// Call the function to change the lights
changeLights();
}else
{
 digitalWrite (trafGreen, HIGH);
 digitalWrite (pedRed, HIGH);}
}
void changeLights() {
digitalWrite(trafGreen, LOW); // green off
digitalWrite(trafYellow, HIGH); // yellow on
delay(3000); // wait 3 seconds
digitalWrite(trafYellow, LOW); // yellow off
digitalWrite(trafRed, HIGH); // red on
delay(3000); // wait 3 second till its safe
digitalWrite(pedRed, LOW); // ped red off
digitalWrite(pedGreen, HIGH); // ped green on
delay(crossTime); // wait for preset time period
// flash the ped green
for (int x=0; x<7; x++) {
digitalWrite(pedGreen, HIGH);
delay(500);
digitalWrite(pedGreen, LOW);
delay(500);
}
// turn ped red on
digitalWrite(pedRed, HIGH);
delay(3000);
digitalWrite(trafRed, LOW); // red off
digitalWrite(trafGreen, HIGH);
// record the time since last change of lights
changeTime = millis();
// then return to the main program loop
}

B. LCD Sketch:
#include <LiquidCrystal.h> //include library code
LiquidCrystal lcd1(3,5,6,7,8,9);//initialise library with numbers of interface pins
LiquidCrystal lcd2(3,4,6,7,8,9);
int trafRed = 12; // Red traffic lights
int trafYellow = 11; // Amber traffic lights
int trafGreen = 10; // Green traffic lights
int trafR =0;
int trafY =0;
int trafG =0;
void setup() {
pinMode(trafRed, INPUT);
pinMode(trafYellow, INPUT);
pinMode(trafGreen, INPUT);
lcd1.begin(16,2);//set up the LCD columns against rows
lcd1.clear(); //clear LCD
51lcd2.begin(16,2);
lcd2.clear(); //clear
}
void loop() {
trafG =digitalRead(trafGreen);
if(trafG ==1)
{
lcd1.setCursor(3,0);
lcd1.print("PEDESTRIAN");
lcd1.setCursor(1,1);
lcd1.print("CROSSING AHEAD");
delay(1000);
lcd1.clear();
lcd1.setCursor(4,0);
lcd1.print("PROCEED");//print message to LCD1
lcd1.setCursor(2,1);//start text at row 2 column 1
lcd1.print("WITH CAUTION");
delay(1000);
lcd1.clear();
lcd2.setCursor(3,0);
52lcd2.print("PEDESTRIAN");
lcd2.setCursor(1,1);
lcd2.print("CROSSING AHEAD");
delay(1000);
lcd2.clear();
lcd2.setCursor(4,0);
lcd2.print("PROCEED");//print message to LCD2
lcd2.setCursor(2,1);//start text at row 2 column 1
lcd2.print("WITH CAUTION");
delay(1000);
lcd2.clear();
}
trafY =digitalRead(trafYellow);
if(trafY ==1)
{
lcd1.setCursor(3,0);
lcd1.print("PREPARE TO");
lcd1.setCursor(1,1);
lcd1.print("STOP 15M AHEAD");
delay(3000);
53lcd1.clear();
lcd2.setCursor(3,0);
lcd2.print("PREPARE TO");
lcd2.setCursor(1,1);
lcd2.print("STOP 15M AHEAD");
delay(3000);
lcd2.clear();
}
trafR =digitalRead(trafRed);
if(trafR ==1)
{
lcd1.setCursor(1,0);
lcd1.print("PLEASE YIELD TO");
lcd1.setCursor(1,1);
lcd1.print("PEDESTRIANS");
delay(3000);
lcd1.clear();
lcd2.setCursor(1,0);
54lcd2.print("PLEASE YIELD TO");
lcd2.setCursor(1,1);
lcd2.print("PEDESTRIANS");
delay(3000);
lcd2.clear();
}
